# для постройки графика и нахождения значений функции на промежутке
# beta = a^8 - 6*a^7 + 3*a^6 + 8*a^5 - 35*a^4 + 73*a^3 - 6*a^2 + 23*a + 7
# выполнил: Руднев
# a - номер старшей степени
# W - массив со значениями функции
# t - первое значение аргумента
# l - дельта t
# q - последнее значение аргумента
# x - кол-во элементов в массиве C
# C - массив с аргументами
# i - переменная для нумерования элементов С
# r - значение функции
# j - переменная для нумерования элементов B
# k - переменная для нумерования элементов W
# N - порядковый номер аргумента
# U - массив со значениями функции

t = float(input('Стартовое значение: '))
l = float(input('Шаг смены значений: '))
q = float(input('Конечное значение: '))
x = int(abs(t - q) / abs(l) + 1)
U = []
C = [0] * x
for i in range(x):
    C[i] = t
    t += l

# отрисовка таблицы

print('\u250c' + '\u2500' * 30 + '\u2510')
print('{:s}{:^5s}{:s}{:^9s}{:s}{:^10s}{:s}'
      .format('\u2502', 'N', '\u2502', 'a', '\u2502', '\u03b2', '\u2502'))
for i in range(0, x):
    r = pow(C[i], 8) - 5 * pow(C[i], 7) + 3 * pow(C[i], 6)\
       + 8 * pow(C[i], 5) - 35 * pow(C[i], 4) + 73 * pow(C[i], 3)\
       - 6 * pow(C[i], 2) + C[i] * 23 + 7
    U.append(r)
    print('\u251c' + '\u2500' * 30 + '\u2524')
    print('{:s}{:^5d}{:s}{:^9.2f}{:s}{:^10.1f}{:s}'
          .format('\u2502', i + 1, '\u2502', C[i], '\u2502', r, '\u2502'))
print('\u2514' + '\u2500' * 30 + '\u2518')
print('Разница максимального и минимального значений функции: ',
      '{:5.4f}'.format(max(U) - min(U)))
print()

# отрисовка графика

ymax = max(U)
ymin = min(U)
g = int((ymax + ymin)/2)
zn = int(68 * -ymin /(ymax - ymin))
print('{:^16.1f}{:^20.1f}{:^14.1f}{:^19.1f}{:^16.1f}'\
   .format(ymin, (g + ymin)/2, g,\
   (g + ymax)/2, ymax), sep = '')
print('{:^4s}'.format('a'), '\t', '\u251c' + '\u2500' * 19 +\
    '\u253c' + '\u2500' * 19 + '\u253c' + '\u2500' * 19 +\
    '\u253c' + '\u2500' * 19 + '\u2524' + '\u03b2', sep = '')
for i in range(x):
    f = int(68 * (U[i] - ymin) / (ymax - ymin))
    print('{:>5.2f}'.format(C[i]), sep = '', end = '')
    if ymax < 0 or ymin > 0:
        print('\t', ' ' * f, '*', sep = '')
    else:
        if zn > f:
            print('\t', ' ' * f, '*', ' ' * (zn - f - 1), '\u2502', sep = '')
        elif zn < f:
            print('\t', ' ' * zn, '\u2502', ' '* (f - zn), '*', sep = '')
        else:
            print('\t', ' ' * zn, '*', sep = '')
